<?xml version="1.0" encoding="utf-8"?>
<?xml-model href="rfc7991bis.rnc"?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>

<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc
  xmlns:xi="http://www.w3.org/2001/XInclude"
  category="info"
  docName="draft-vandermeulen-oauth-resource-helper-00"
  ipr="trust200902"
  obsoletes=""
  updates=""
  submissionType="IETF"
  xml:lang="en"
  version="3">

  <front>
    <title abbrev="OAuth Resource Helper">OAuth Resource Helper</title>

    <seriesInfo name="Internet-Draft" value="draft-vandermeulen-oauth-resource-helper-00"/>

    <author fullname="Pieter van der Meulen" initials="P.G.M." surname="van der Meulen">
      <organization>SURF</organization>
      <address>
        <postal>
          <street>Moreelsepark 48</street>
          <code>3511 EP</code>
          <city>Utrecht</city>
          <country>NL</country>
        </postal>
        <email>pieter.vandermeulen@surf.nl</email>
      </address>
    </author>

    <author fullname="Michiel de Jong" initials="M.B." surname="de Jong">
      <organization>Ponder Source</organization>
      <address>
        <email>michiel@unhosted.org</email>
      </address>
    </author>

    <date year="2024"/>

    <area>General</area>
    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>OAuth</keyword>
    <keyword>Resource Helper</keyword>

    <abstract>
      <t>
        A Resource Helper can replace the scope-picking capabilities of an OAuth Authorization Server.
        This makes the software architecture of the Authorization Server more modular,
        and can alleviate organisational challenges when the API of a Resource Server evolves.
        The Resource Helper still needs to adapt in lock-step with API changes,
        but the rest of the Authorization Server can be managed on a more stable software deployment cycle.
        The Resource Helper provides one front channel endpoint: a "pick" endpoint for selecting access scopes in detail.
        The Authorization exposes a "choice" endpoint where the Resource Helper can submit the Resource Owner's choice,
        an optional "subject_info" endpoint and a redirect end point for the front channel.
      </t>
    </abstract>
    
  </front>

  <middle>

    <section>
      <name>Introduction</name>
      <t>
        The Authorization Server may redirect the Resource Owner to the Resource Helper's Pick endpoint,
        as part of the authorization flow.
      </t>
      <t>
        During the Authorization Code Flow as described in <xref target="I-D.ietf-oauth-v2-1"/>,
        the authorization server authenticates the resource owner (via the user agent)
        and establishes whether the resource owner (partially) grants or denies the client's access request.
        For the authorization server to meaningfully measure if the resource owner wants to grant or deny the request,
        it needs to display, presumably via the user agent,
        the details of the access token scope in a way that the resource owner will understand.
      </t>
      <t>
        Displaying access token scope details via the user agent may involve describing specific resources and actions,
        in a human-viewable, probably locale-dependent, and possibly even persona-dependent way, possibly using a combination
        of text, images, and layout. The Resource Helper can specialise in this task, leaving the Authorization Server more
        generic and stable.
      </t>

      <section>
        <name>Requirements Language</name>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
          "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT
          RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
          interpreted as described in BCP 14
          <xref target="RFC2119"/>
          <xref target="RFC8174"/>
          when, and only when, they appear in
          all capitals, as shown here.
        </t>
      </section>
    </section>

    <section>
      <name>Generic Flow</name>
      <t>
        [sequence diagram etc]
      </t>
    </section>

    <section>
      <name>Resource Helper Registry</name>
      <t>
        The Authorization Server SHOULD maintain a registry of Resource Helpers it trusts,
        with for each Resource Helper:
        * a fully qualified domain name (for `/.well-known/resource-helper` lookup, see below)
        * client credentials
      </t>
    </section>

    <section>
      <name>Resource Helper Well-Known Endpoint</name>
      <t>
        At the `/.well-known/resource-helper` end point, the Resource Helper lists the URI for
        the `pick` endpoint (front channel).
     </t>
    </section>

    <section>
      <name>Resource Helper Configuration</name>
      <t>
        The Resource Helper needs to store:
        * its client credentials
        * the `choice` endpoint URL of the Auhtorization Server (back channel)
        * the `redirect_uri` endpoint URL of the Authorization Server (front channel)
        * (optional) the `subject_info` endpoint URL of the Authorization Server (back channel)
     </t>
    </section>

    <section>
      <name>Resource Helper Pick endpoint</name>
      <t>
        The Authorization can redirect the end user to the Resource Helper's Pick endpoint, with in the query paramaters:
        <ul>
          <li>a nonce for this interaction</li>
          <li>(optional) the scope parameter as specified by the client (if any)</li>
        </ul>
        Example: <tt>https://resource-helper.example.com/pick?nonce=12345678&scope=read</tt>.
     </t>
    </section>

    <section>
      <name>Subject Info Lookup</name>
      <t>
        The Resource Helper can optionally make a HTTP call to the Subject Info endpoint of the Authorization Server,
        with the nonce from the pick request in the query parameter to obtain more information about the end user.
        Alternatively, the Resource Helper could skip this step and instead take its own end user authentication measures.
        Example: <tt>
GET https://authorization-server.example.com/subject-info?nonce=12345678

{
  "username": "polly123@surf.nl"
}
</tt>
      </t>
    </section>

    <section>
      <name>Picking Access Token Scopes</name>
      <t>
        The authorization server may grant an access token scope which may be different from the one requested by the client,
        based on the authorization server policy and the resource owner's instructions.
      </t>
      <t>
        After allowing the user to pick a fine-grained access scope, the resulting choice submission would include a scope field:
      </t>
      <t>
        POST /choice
        Content-Type: application/json

        {
          "nonce": "12345678",
          "scope": "/home/john/pictures/4:write",
          "payload": (opaque),
          "introspect": (opaque),
          "label": "Write access to John's picture 4"
        }
      </t>
    </section>

    <section>
      <name>The Choice endpoint</name>
      <t>
        The authorization server MAY receive additional types of information from the resource helper through the Choice endpoint.
        Here is a non-normative example:
      </t>
      <t>
        POST /choice
        Content-Type: application/json

        {
          "action": "grant",
          "state": "xyz",
          "scope": "/home/john/pictures/4:write",
          "label": {
            "en-US": "John's picture number 4 (write access)"
          },
          "payload": {
            "user": "john"
          },
          "introspect": {
            "path": "storage-5:~pictures/4",
            "modes": "rwx"
          },
        }
      </t>
      <section>
      <name>Human-readable label</name>
      <t>
        Even though the detailed view of an access scope can only be provided by the resource helper,
        it is still useful if the authorisation server can at least display a string label.
        In particular, when the authorisation server displays the final confirmation dialog,
        to grant the viewed or picked scope to the client in question,
        it could display this label in much the same way as it will likely display some label for the client's identity there.
        Also, when displaying a list of currently valid tokens, with the option to revoke,
        it would be cumbersome for the user to click 'view' on each of them,
        and displaying a list of one-line labels would be more convenient there.
      </t>
      <t>
        This label could be produced programmatically by the resource helper, or hand-picked by the resource owner.
      </t>
    </section>
    <section>
      <name>Introspect and token payload options</name>
      <t>
        To make it easier for existing resource servers to start accepting access tokens issued by the authorization server,
        some custom arrangements may be included in the resource helper's software, that interacts well with the resource server's
        existing processes and policies.
        To facilitate this, the authorization server MAY allow the resource helper to specify opaque data to be included in the access token payload
        and in the token introspect response.
      </t>
      <t>
        The resource helper might also share state with the resource server
        that helps the resource server to understand the scope of the access tokens issued by the authorisation server.
      </t>
      </section>
    </section>

    <section anchor="IANA">
      <name>IANA Considerations</name>
      <t>This memo includes no request to IANA.</t>
    </section>

    <section anchor="Security">
      <name>Security Considerations</name>
      <t>
        It is important to understand the value of the redirect back from resource helper to authorization server.
        It already contains an access grant as a half-product,
        for the authorization server to finalize by actually issuing it to a client.
      </t>
      <t>
        This model differs from the Lodging Intent pattern used in<xref target="FAPI-CIBA"/>,
        where the intent is only a description of some intended transaction,
        directly between client and resource server,
        which does not imply that it was composed by an authenticated resource owner.
      </t>
      <t>
        It's up to the Authorization Server and the Resource Helper
        to share their understanding of the various values of 'action'.
      </t>
      <t>
        The Authorization Server should be careful not to redirect the user to the wrong URL,
        put a nonce in the state parameter and check that when accepting the callback redirect,
        and to always use https.
      </t>
      <t>
        The Resource Helper should not display any information that the currently authenticated user is not allowed to see,
        even if it is instructed to display them through the scope parameter that comes from the Authorization Server.
      </t>
      <t>
        The Resource Helper should only grant access to resources for which the currently authenticated user is a resource owner.
        The resulting access token scope should always be a subset (attenuation) of the Resource Owner's own access scope.
      </t>
      <t>
        The scope coming back from the Resource Helper should not need to be interpreted in the context of a specific user.
        For instance, a scope 'my-billing-details:read' means different things for different resource owners.
        To avoid confusion, especially in the light of decoupled authentication (see above),
        use a globally unambiguous scope identifier such as 'user-123:billing-detals:read'.
      </t>
    </section>
  </middle>

  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://datatracker.ietf.org/doc/bibxml3/draft-ietf-oauth-v2-1-11.xml"/>
      </references>

      <references>
        <name>Informative References</name>
        <xi:include href="https://datatracker.ietf.org/doc/bibxml3/draft-ietf-gnap-resource-servers-05.xml"/>
        <reference anchor="UMA-Fed-Authz"
                   target="https://docs.kantarainitiative.org/uma/wg/rec-oauth-uma-federated-authz-2.0.html">
          <front>
            <title>UMA Federated Authorization</title>
            <author initials="E." surname="Maler">
              <organization/>
            </author>
            <date year="2018"/>
          </front>
        </reference>

        <reference anchor="FAPI-CIBA"
                   target="https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html">
          <front>
            <title>UMA Federated Authorization</title>
            <author initials="G." surname="Fernandez">
              <organization/>
            </author>
            <date year="2021"/>
          </front>
        </reference>
      </references>
    </references>
  </back>
</rfc>
